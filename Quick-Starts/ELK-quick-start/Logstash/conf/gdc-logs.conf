# config by log4j format

input {
    file {
        path => ["/data/logs/bj/*/*.log"]
        add_field => {"log_group" => "beijing"}
        codec => multiline {
           pattern => "^(%{YEAR}|%{MONTHDAY})-(%{MONTHNUM}|[a-zA-Z]{3})-(%{MONTHDAY}|%{YEAR}) %{HOUR}:?%{MINUTE}(?::?%{SECOND}) "
           negate => true
           what => "previous"
           max_lines => 1000
           max_bytes => "10MiB"
           auto_flush_interval => 30  # 30s 没有更新则自动刷新
        }
    }
    file {
        path => ["/data/logs/sz/*/*.log"]
        add_field => {"log_group" => "shenzhen"}
        codec => multiline {
           pattern => "^(%{YEAR}|%{MONTHDAY})-(%{MONTHNUM}|[a-zA-Z]{3})-(%{MONTHDAY}|%{YEAR}) %{HOUR}:?%{MINUTE}(?::?%{SECOND}) "
           negate => true
           what => "previous"
           max_lines => 1000
           max_bytes => "10MiB"
           auto_flush_interval => 30  # 30s 没有更新则自动刷新
        }
    }
}

filter {

    grok {
        match => {
            "message" => "(?<logdate>.*)\s?\[(?<thread>.*?)\] (?<log_level>\w*?) (?<class>.*?)\s-\s(?<message>.*)"
        }
        overwrite => ["message"]
    }
    date {
         match => ["logdate", "yyyy-MM-dd HH:mm:ss.SSS "]
         timezone => "+08:00"  
         target => "@timestamp"
    }
    grok {
        match => {
            "message" => [
                "GDC\sversion:\s(?<cli_version>[-\.\d\w]*)",
                ".*?start\sto\swork\sby\sGDC-GUI\s(?<gui_version>[-\.\d\w]*)",
                "GD-Trace\s-\soperation:\s(?<operation>[\w_]+),\sinfo:\s.*?,\sop-elapsed:\s(?<op_elapsed>\d+),.*?op-trace-id\(op\):\s(?<op_trace_id>.*?)\s-\s\[.*?]\s-\shistory-ids:\s\[(?<file_id>.*?)]",
                # at task start
                "GD-Trace\s-\soperation:\s(?<operation>[\w_]+),\sinfo:\s.*?op-trace-id\(op\):\s(?<op_trace_id>.*?)\s-\s\[.*?]\s-\shistory-ids:\s\[(?<file_id>.*?)]",
                "\[ErrorCode\]:\s(?<error_code>\w*)",
                "(?<message>.*)"
            ]
        }
        overwrite => ["message"]

    }

    mutate {
        convert => ["op_elapsed", "integer"]
    }

    mutate {
        #  path: /data/logs/bj/raomengnan/admin-2018-08-02.log
        split => ["path", "/"]
        add_field => {
            "tmp_user" => "%{[path][4]}/%{[path][5]}"
        }
    }

    mutate {
        #  user: raomengnan/admin-LINUX-4.4.0119GENERIC-AMD64-2018-08-02.log
        split => ["tmp_user", "-"]
        add_field => {
            "user" => "%{[tmp_user][0]}"
            "os_name" => "%{[tmp_user][1]}"
            "os_version" => "%{[tmp_user][2]}"
            "os_arch" => "%{[tmp_user][3]}"
        }
        remove_field => ["tmp_user"]
        join => ["path", "/"]
    }

}

output {
    if [log_group] == "beijing" {
        elasticsearch {
            hosts => ["192.168.1.103:9200"]
            index => "bj-gdc-%{+YYYY.MM.dd}"
        }
    }
    else if [log_group] == "shenzhen" {
        elasticsearch {
            hosts => ["192.168.1.103:9200"]
            index => "sz-gdc-%{+YYYY.MM.dd}"
        }
    }
    else {
       elasticsearch {
          hosts => ["192.168.1.103:9200"]
          index => "syslog-%{+YYYY.MM.dd}"
       }
    }
    stdout { codec => rubydebug }
}
